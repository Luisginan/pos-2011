// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UITesting
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddPenjualan
        /// </summary>
        public void AddPenjualan()
        {
            #region Variable Declarations
            WinButton uIAddButton = this.UICashierWindow.UIAddWindow.UIAddButton;
            #endregion

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(53, 33));
        }
        
        /// <summary>
        /// ChangePrice - Use 'ChangePriceParams' to pass parameters into this method.
        /// </summary>
        public void ChangePrice()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UICashierWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAddItemWindow.UIItemWindow1.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(41, 12));

            // Type '{Right}' in text box
            Keyboard.SendKeys(uIItemEdit, this.ChangePriceParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '6000' in text box
            uIItemEdit1.Text = this.ChangePriceParams.UIItemEditText;

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.ChangePriceParams.UIItemEditSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// ChangeQtyAndPrice - Use 'ChangeQtyAndPriceParams' to pass parameters into this method.
        /// </summary>
        public void ChangeQtyAndPrice()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UICashierWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAddItemWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit2 = this.UIAddItemWindow.UIItemWindow1.UIItemEdit;
            #endregion

            // Type '{Left}' in text box
            Keyboard.SendKeys(uIItemEdit, this.ChangeQtyAndPriceParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '3' in text box
            uIItemEdit1.Text = this.ChangeQtyAndPriceParams.UIItemEditText;

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.ChangeQtyAndPriceParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '10000' in text box
            uIItemEdit2.Text = this.ChangeQtyAndPriceParams.UIItemEditText1;

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.ChangeQtyAndPriceParams.UIItemEditSendKeys2, ModifierKeys.None);
        }
        
        /// <summary>
        /// ChangeUnit - Use 'ChangeUnitParams' to pass parameters into this method.
        /// </summary>
        public void ChangeUnit()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UICashierWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAddItemWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit2 = this.UIAddItemWindow.UIItemWindow1.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(31, 2));

            // Type '{Left}' in text box
            Keyboard.SendKeys(uIItemEdit, this.ChangeUnitParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '{Right}{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.ChangeUnitParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.ChangeUnitParams.UIItemEditSendKeys2, ModifierKeys.None);
        }
        
        /// <summary>
        /// CloseApp
        /// </summary>
        public void CloseApp()
        {
            #region Variable Declarations
            WinMenuBar uIMainMenuRibonMenuBar = this.UIMainMenuWindow.UIMainMenuRibonWindow.UIMainMenuRibonMenuBar;
            #endregion

            // Click 'MainMenuRibon' menu bar
            Mouse.Click(uIMainMenuRibonMenuBar, new Point(1355, 17));
        }
        
        /// <summary>
        /// CloseCashier
        /// </summary>
        public void CloseCashier()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UICashierWindow.UICashierTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(9, 23));
        }
        
        /// <summary>
        /// FinishTransaction
        /// </summary>
        public void FinishTransaction()
        {
            #region Variable Declarations
            WinButton uISaveButton = this.UICashierWindow.UISaveWindow.UISaveButton;
            WinButton uICancelButton = this.UIPaymentWindow.UICancelWindow.UICancelButton;
            #endregion

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(13, 26));

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(36, 59));
        }
        
        /// <summary>
        /// InputBarcode - Use 'InputBarcodeParams' to pass parameters into this method.
        /// </summary>
        public void InputBarcode()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UICashierWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Type '8992747300388' in text box
            uIItemEdit.Text = this.InputBarcodeParams.UIItemEditText;

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit, this.InputBarcodeParams.UIItemEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// Login - Use 'LoginParams' to pass parameters into this method.
        /// </summary>
        public void Login()
        {
            #region Variable Declarations
            WinEdit uIUsernameTextBoxEdit = this.UILoginWindow.UIUsernameTextBoxWindow.UIUsernameTextBoxEdit;
            WinEdit uIPasswordTextBoxEdit = this.UILoginWindow.UIPasswordTextBoxWindow.UIPasswordTextBoxEdit;
            WinButton uILoginButton = this.UILoginWindow.UILoginWindow1.UILoginButton;
            #endregion

            // Type 'a' in 'UsernameTextBox' text box
            uIUsernameTextBoxEdit.Text = this.LoginParams.UIUsernameTextBoxEditText;

            // Click 'PasswordTextBox' text box
            Mouse.Click(uIPasswordTextBoxEdit, new Point(21, 8));

            // Type '********' in 'PasswordTextBox' text box
            Keyboard.SendKeys(uIPasswordTextBoxEdit, this.LoginParams.UIPasswordTextBoxEditSendKeys, true);

            // Click '&Login' button
            Mouse.Click(uILoginButton, new Point(53, 15));
        }
        
        /// <summary>
        /// OpenApp - Use 'OpenAppParams' to pass parameters into this method.
        /// </summary>
        public void OpenApp()
        {

            // Launch 'D:\TFS\RNT 2011\POS 2011\MainApp\bin\Debug\RNT2011.exe'
            ApplicationUnderTest rNT2011Application = ApplicationUnderTest.Launch(this.OpenAppParams.ExePath, this.OpenAppParams.AlternateExePath);
        }
        
        /// <summary>
        /// OpenCashier
        /// </summary>
        public void OpenCashier()
        {
            #region Variable Declarations
            WinMenuBar uIMainMenuRibonMenuBar = this.UIMainMenuWindow.UIMainMenuRibonWindow.UIMainMenuRibonMenuBar;
            #endregion

            // Click 'MainMenuRibon' menu bar
            Mouse.Click(uIMainMenuRibonMenuBar, new Point(200, 88));
        }
        
        /// <summary>
        /// Registering - Use 'RegisteringParams' to pass parameters into this method.
        /// </summary>
        public void Registering()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIRegisterAppForComputWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIRegisterAppForComputWindow.UIItemWindow1.UIItemEdit;
            WinEdit uIItemEdit2 = this.UIRegisterAppForComputWindow.UIItemWindow2.UIItemEdit;
            WinButton uITestConnectionButton = this.UIRegisterAppForComputWindow.UITestConnectionWindow.UITestConnectionButton;
            WinButton uIOKButton = this.UIInformationWindow.UIOKWindow.UIOKButton;
            WinEdit uIItemEdit3 = this.UIRegisterAppForComputWindow.UIItemWindow3.UIItemEdit;
            WinButton uIRegisterButton = this.UIRegisterAppForComputWindow.UIRegisterWindow.UIRegisterButton;
            #endregion

            // Type '.' in text box
            uIItemEdit.Text = this.RegisteringParams.UIItemEditText;

            // Type 'sa' in text box
            uIItemEdit1.Text = this.RegisteringParams.UIItemEditText1;

            // Type '123456' in text box
            uIItemEdit2.Text = this.RegisteringParams.UIItemEditText2;

            // Click 'Test Connection' button
            Mouse.Click(uITestConnectionButton, new Point(20, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(25, 24));

            // Type '1099711010010511410545979750534848102' in text box
            uIItemEdit3.Text = this.RegisteringParams.UIItemEditText3;

            // Click 'Register' button
            Mouse.Click(uIRegisterButton, new Point(12, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(13, 18));
        }
        
        /// <summary>
        /// OpenRegister - Use 'OpenRegisterParams' to pass parameters into this method.
        /// </summary>
        public void OpenRegister()
        {
            #region Variable Declarations
            WinMenuItem uILogoutMenuItem = this.UIMainMenuWindow.UIMainMenuRibonMenuBar.UIAplicationMenuItem.UILogoutMenuItem;
            WinMenu uIDropDownMenu = this.UIItemWindow.UIDropDownMenu;
            WinMenu uIAplicationDropDownMenu = this.UIItemWindow1.UIAplicationDropDownMenu;
            #endregion

            // Click 'Aplication' -> 'Logout' menu item
            Mouse.Click(uILogoutMenuItem, new Point(26, 28));

            // Type '{Down}{Right}' in 'DropDown' popup menu
            Keyboard.SendKeys(uIDropDownMenu, this.OpenRegisterParams.UIDropDownMenuSendKeys, ModifierKeys.None);

            // Type '{Down}{Enter}' in 'AplicationDropDown' popup menu
            Keyboard.SendKeys(uIAplicationDropDownMenu, this.OpenRegisterParams.UIAplicationDropDownMenuSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// FinishTransactionPrint
        /// </summary>
        public void FinishTransactionPrint()
        {
            #region Variable Declarations
            WinButton uISaveButton = this.UICashierWindow.UISaveWindow.UISaveButton;
            WinButton uIPrintButton = this.UIPaymentWindow.UIPrintWindow.UIPrintButton;
            #endregion

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(15, 29));

            // Click 'Print' button
            Mouse.Click(uIPrintButton, new Point(19, 38));
        }
        
        /// <summary>
        /// ChangePriceAndQtyCancel - Use 'ChangePriceAndQtyCancelParams' to pass parameters into this method.
        /// </summary>
        public void ChangePriceAndQtyCancel()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UICashierWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIAddItemWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit2 = this.UIAddItemWindow.UIItemWindow1.UIItemEdit;
            WinEdit uIItemEdit3 = this.UIAddItemWindow.UIItemWindow2.UIItemEdit;
            WinEdit uIItemEdit4 = this.UIAddItemWindow.UIItemWindow3.UIItemEdit;
            WinEdit uIItemEdit5 = this.UIAddItemWindow.UIItemWindow11.UIItemEdit;
            #endregion

            // Click text box
            Mouse.Click(uIItemEdit, new Point(99, 13));

            // Type '{Left}' in text box
            Keyboard.SendKeys(uIItemEdit, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '5' in text box
            uIItemEdit1.Text = this.ChangePriceAndQtyCancelParams.UIItemEditText;

            // Type '{Enter}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Type '{Escape}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys2, ModifierKeys.None);

            // Type '{Escape}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys3, ModifierKeys.None);

            // Type '{Right}' in text box
            Keyboard.SendKeys(uIItemEdit, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys4, ModifierKeys.None);

            // Type '50000' in text box
            uIItemEdit3.Text = this.ChangePriceAndQtyCancelParams.UIItemEditText1;

            // Type '{Escape}' in text box
            Keyboard.SendKeys(uIItemEdit4, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys5, ModifierKeys.None);

            // Type '{Escape}' in text box
            Keyboard.SendKeys(uIItemEdit5, this.ChangePriceAndQtyCancelParams.UIItemEditSendKeys6, ModifierKeys.None);
        }
        
        #region Properties
        public virtual ChangePriceParams ChangePriceParams
        {
            get
            {
                if ((this.mChangePriceParams == null))
                {
                    this.mChangePriceParams = new ChangePriceParams();
                }
                return this.mChangePriceParams;
            }
        }
        
        public virtual ChangeQtyAndPriceParams ChangeQtyAndPriceParams
        {
            get
            {
                if ((this.mChangeQtyAndPriceParams == null))
                {
                    this.mChangeQtyAndPriceParams = new ChangeQtyAndPriceParams();
                }
                return this.mChangeQtyAndPriceParams;
            }
        }
        
        public virtual ChangeUnitParams ChangeUnitParams
        {
            get
            {
                if ((this.mChangeUnitParams == null))
                {
                    this.mChangeUnitParams = new ChangeUnitParams();
                }
                return this.mChangeUnitParams;
            }
        }
        
        public virtual InputBarcodeParams InputBarcodeParams
        {
            get
            {
                if ((this.mInputBarcodeParams == null))
                {
                    this.mInputBarcodeParams = new InputBarcodeParams();
                }
                return this.mInputBarcodeParams;
            }
        }
        
        public virtual LoginParams LoginParams
        {
            get
            {
                if ((this.mLoginParams == null))
                {
                    this.mLoginParams = new LoginParams();
                }
                return this.mLoginParams;
            }
        }
        
        public virtual OpenAppParams OpenAppParams
        {
            get
            {
                if ((this.mOpenAppParams == null))
                {
                    this.mOpenAppParams = new OpenAppParams();
                }
                return this.mOpenAppParams;
            }
        }
        
        public virtual RegisteringParams RegisteringParams
        {
            get
            {
                if ((this.mRegisteringParams == null))
                {
                    this.mRegisteringParams = new RegisteringParams();
                }
                return this.mRegisteringParams;
            }
        }
        
        public virtual OpenRegisterParams OpenRegisterParams
        {
            get
            {
                if ((this.mOpenRegisterParams == null))
                {
                    this.mOpenRegisterParams = new OpenRegisterParams();
                }
                return this.mOpenRegisterParams;
            }
        }
        
        public virtual ChangePriceAndQtyCancelParams ChangePriceAndQtyCancelParams
        {
            get
            {
                if ((this.mChangePriceAndQtyCancelParams == null))
                {
                    this.mChangePriceAndQtyCancelParams = new ChangePriceAndQtyCancelParams();
                }
                return this.mChangePriceAndQtyCancelParams;
            }
        }
        
        public UIMainMenuWindow UIMainMenuWindow
        {
            get
            {
                if ((this.mUIMainMenuWindow == null))
                {
                    this.mUIMainMenuWindow = new UIMainMenuWindow();
                }
                return this.mUIMainMenuWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UISupplierWindow UISupplierWindow
        {
            get
            {
                if ((this.mUISupplierWindow == null))
                {
                    this.mUISupplierWindow = new UISupplierWindow();
                }
                return this.mUISupplierWindow;
            }
        }
        
        public UIInformationWindow UIInformationWindow
        {
            get
            {
                if ((this.mUIInformationWindow == null))
                {
                    this.mUIInformationWindow = new UIInformationWindow();
                }
                return this.mUIInformationWindow;
            }
        }
        
        public UIFindSupplier6RecordFWindow UIFindSupplier6RecordFWindow
        {
            get
            {
                if ((this.mUIFindSupplier6RecordFWindow == null))
                {
                    this.mUIFindSupplier6RecordFWindow = new UIFindSupplier6RecordFWindow();
                }
                return this.mUIFindSupplier6RecordFWindow;
            }
        }
        
        public UIConfirmWindow UIConfirmWindow
        {
            get
            {
                if ((this.mUIConfirmWindow == null))
                {
                    this.mUIConfirmWindow = new UIConfirmWindow();
                }
                return this.mUIConfirmWindow;
            }
        }
        
        public UICashierWindow UICashierWindow
        {
            get
            {
                if ((this.mUICashierWindow == null))
                {
                    this.mUICashierWindow = new UICashierWindow();
                }
                return this.mUICashierWindow;
            }
        }
        
        public UIFindBarang6102RecordWindow UIFindBarang6102RecordWindow
        {
            get
            {
                if ((this.mUIFindBarang6102RecordWindow == null))
                {
                    this.mUIFindBarang6102RecordWindow = new UIFindBarang6102RecordWindow();
                }
                return this.mUIFindBarang6102RecordWindow;
            }
        }
        
        public UIAddItemWindow UIAddItemWindow
        {
            get
            {
                if ((this.mUIAddItemWindow == null))
                {
                    this.mUIAddItemWindow = new UIAddItemWindow();
                }
                return this.mUIAddItemWindow;
            }
        }
        
        public UIPaymentWindow UIPaymentWindow
        {
            get
            {
                if ((this.mUIPaymentWindow == null))
                {
                    this.mUIPaymentWindow = new UIPaymentWindow();
                }
                return this.mUIPaymentWindow;
            }
        }
        
        public UIRegisterAppForComputWindow UIRegisterAppForComputWindow
        {
            get
            {
                if ((this.mUIRegisterAppForComputWindow == null))
                {
                    this.mUIRegisterAppForComputWindow = new UIRegisterAppForComputWindow();
                }
                return this.mUIRegisterAppForComputWindow;
            }
        }
        
        public UIItemWindow9 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow9();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow14 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow14();
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private ChangePriceParams mChangePriceParams;
        
        private ChangeQtyAndPriceParams mChangeQtyAndPriceParams;
        
        private ChangeUnitParams mChangeUnitParams;
        
        private InputBarcodeParams mInputBarcodeParams;
        
        private LoginParams mLoginParams;
        
        private OpenAppParams mOpenAppParams;
        
        private RegisteringParams mRegisteringParams;
        
        private OpenRegisterParams mOpenRegisterParams;
        
        private ChangePriceAndQtyCancelParams mChangePriceAndQtyCancelParams;
        
        private UIMainMenuWindow mUIMainMenuWindow;
        
        private UILoginWindow mUILoginWindow;
        
        private UISupplierWindow mUISupplierWindow;
        
        private UIInformationWindow mUIInformationWindow;
        
        private UIFindSupplier6RecordFWindow mUIFindSupplier6RecordFWindow;
        
        private UIConfirmWindow mUIConfirmWindow;
        
        private UICashierWindow mUICashierWindow;
        
        private UIFindBarang6102RecordWindow mUIFindBarang6102RecordWindow;
        
        private UIAddItemWindow mUIAddItemWindow;
        
        private UIPaymentWindow mUIPaymentWindow;
        
        private UIRegisterAppForComputWindow mUIRegisterAppForComputWindow;
        
        private UIItemWindow9 mUIItemWindow;
        
        private UIItemWindow14 mUIItemWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangePrice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ChangePriceParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Right}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Right}";
        
        /// <summary>
        /// Type '6000' in text box
        /// </summary>
        public string UIItemEditText = "6000";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeQtyAndPrice'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ChangeQtyAndPriceParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Left}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Left}";
        
        /// <summary>
        /// Type '3' in text box
        /// </summary>
        public string UIItemEditText = "3";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type '10000' in text box
        /// </summary>
        public string UIItemEditText1 = "10000";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangeUnit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ChangeUnitParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Left}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Left}";
        
        /// <summary>
        /// Type '{Right}{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Right}{Enter}";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InputBarcode'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class InputBarcodeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '8992747300388' in text box
        /// </summary>
        public string UIItemEditText = "8992747300388";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class LoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'a' in 'UsernameTextBox' text box
        /// </summary>
        public string UIUsernameTextBoxEditText = "a";
        
        /// <summary>
        /// Type '********' in 'PasswordTextBox' text box
        /// </summary>
        public string UIPasswordTextBoxEditSendKeys = "V2MIOSNRVrfyL78H0jN146d3BRDwGIwY";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class OpenAppParams
    {
        
        #region Fields
        /// <summary>
        /// Launch 'D:\TFS\RNT 2011\POS 2011\MainApp\bin\Debug\RNT2011.exe'
        /// </summary>
        public string ExePath = "C:\\Users\\luisginanmac\\Documents\\TFSS\\RNT 2011\\POS 2011\\MainApp\\bin\\Debug\\RNT2011.exe";
        
        /// <summary>
        /// Launch 'D:\TFS\RNT 2011\POS 2011\MainApp\bin\Debug\RNT2011.exe'
        /// </summary>
        public string AlternateExePath = "D:\\TFS\\RNT 2011\\POS 2011\\MainApp\\bin\\Debug\\RNT2011.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Registering'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class RegisteringParams
    {
        
        #region Fields
        /// <summary>
        /// Type '.' in text box
        /// </summary>
        public string UIItemEditText = ".";
        
        /// <summary>
        /// Type 'sa' in text box
        /// </summary>
        public string UIItemEditText1 = "sa";
        
        /// <summary>
        /// Type '123456' in text box
        /// </summary>
        public string UIItemEditText2 = "123456";
        
        /// <summary>
        /// Type '1099711010010511410545979750534848102' in text box
        /// </summary>
        public string UIItemEditText3 = "1099711010010511410545979750534848102";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenRegister'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class OpenRegisterParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Down}{Right}' in 'DropDown' popup menu
        /// </summary>
        public string UIDropDownMenuSendKeys = "{Down}{Right}";
        
        /// <summary>
        /// Type '{Down}{Enter}' in 'AplicationDropDown' popup menu
        /// </summary>
        public string UIAplicationDropDownMenuSendKeys = "{Down}{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ChangePriceAndQtyCancel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class ChangePriceAndQtyCancelParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Left}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Left}";
        
        /// <summary>
        /// Type '5' in text box
        /// </summary>
        public string UIItemEditText = "5";
        
        /// <summary>
        /// Type '{Enter}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Enter}";
        
        /// <summary>
        /// Type '{Escape}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Escape}";
        
        /// <summary>
        /// Type '{Escape}' in text box
        /// </summary>
        public string UIItemEditSendKeys3 = "{Escape}";
        
        /// <summary>
        /// Type '{Right}' in text box
        /// </summary>
        public string UIItemEditSendKeys4 = "{Right}";
        
        /// <summary>
        /// Type '50000' in text box
        /// </summary>
        public string UIItemEditText1 = "50000";
        
        /// <summary>
        /// Type '{Escape}' in text box
        /// </summary>
        public string UIItemEditSendKeys5 = "{Escape}";
        
        /// <summary>
        /// Type '{Escape}' in text box
        /// </summary>
        public string UIItemEditSendKeys6 = "{Escape}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMainMenuWindow : WinWindow
    {
        
        public UIMainMenuWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Main Menu";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Main Menu");
            #endregion
        }
        
        #region Properties
        public UIMainMenuRibonWindow UIMainMenuRibonWindow
        {
            get
            {
                if ((this.mUIMainMenuRibonWindow == null))
                {
                    this.mUIMainMenuRibonWindow = new UIMainMenuRibonWindow(this);
                }
                return this.mUIMainMenuRibonWindow;
            }
        }
        
        public UIMainMenuRibonMenuBar UIMainMenuRibonMenuBar
        {
            get
            {
                if ((this.mUIMainMenuRibonMenuBar == null))
                {
                    this.mUIMainMenuRibonMenuBar = new UIMainMenuRibonMenuBar(this);
                }
                return this.mUIMainMenuRibonMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMainMenuRibonWindow mUIMainMenuRibonWindow;
        
        private UIMainMenuRibonMenuBar mUIMainMenuRibonMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMainMenuRibonWindow : WinWindow
    {
        
        public UIMainMenuRibonWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MainMenuRibon";
            this.WindowTitles.Add("Main Menu");
            #endregion
        }
        
        #region Properties
        public WinMenuBar UIMainMenuRibonMenuBar
        {
            get
            {
                if ((this.mUIMainMenuRibonMenuBar == null))
                {
                    this.mUIMainMenuRibonMenuBar = new WinMenuBar(this);
                    #region Search Criteria
                    this.mUIMainMenuRibonMenuBar.SearchProperties[WinMenu.PropertyNames.Name] = "MainMenuRibon";
                    this.mUIMainMenuRibonMenuBar.WindowTitles.Add("Main Menu");
                    #endregion
                }
                return this.mUIMainMenuRibonMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuBar mUIMainMenuRibonMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIMainMenuRibonMenuBar : WinMenuBar
    {
        
        public UIMainMenuRibonMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "MainMenuRibon";
            this.WindowTitles.Add("Main Menu");
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDropDownButton
        {
            get
            {
                if ((this.mUIItemDropDownButton == null))
                {
                    this.mUIItemDropDownButton = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDropDownButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDownButton";
                    this.mUIItemDropDownButton.WindowTitles.Add("Main Menu");
                    #endregion
                }
                return this.mUIItemDropDownButton;
            }
        }
        
        public UIAplicationMenuItem UIAplicationMenuItem
        {
            get
            {
                if ((this.mUIAplicationMenuItem == null))
                {
                    this.mUIAplicationMenuItem = new UIAplicationMenuItem(this);
                }
                return this.mUIAplicationMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDropDownButton;
        
        private UIAplicationMenuItem mUIAplicationMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAplicationMenuItem : WinMenuItem
    {
        
        public UIAplicationMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Aplication";
            this.WindowTitles.Add("Main Menu");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIRegisterMenuItem
        {
            get
            {
                if ((this.mUIRegisterMenuItem == null))
                {
                    this.mUIRegisterMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIRegisterMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Register";
                    this.mUIRegisterMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIRegisterMenuItem.WindowTitles.Add("Main Menu");
                    #endregion
                }
                return this.mUIRegisterMenuItem;
            }
        }
        
        public WinMenuItem UILogoutMenuItem
        {
            get
            {
                if ((this.mUILogoutMenuItem == null))
                {
                    this.mUILogoutMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUILogoutMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Logout";
                    this.mUILogoutMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUILogoutMenuItem.WindowTitles.Add("Main Menu");
                    #endregion
                }
                return this.mUILogoutMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIRegisterMenuItem;
        
        private WinMenuItem mUILogoutMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIUsernameTextBoxWindow UIUsernameTextBoxWindow
        {
            get
            {
                if ((this.mUIUsernameTextBoxWindow == null))
                {
                    this.mUIUsernameTextBoxWindow = new UIUsernameTextBoxWindow(this);
                }
                return this.mUIUsernameTextBoxWindow;
            }
        }
        
        public UIPasswordTextBoxWindow UIPasswordTextBoxWindow
        {
            get
            {
                if ((this.mUIPasswordTextBoxWindow == null))
                {
                    this.mUIPasswordTextBoxWindow = new UIPasswordTextBoxWindow(this);
                }
                return this.mUIPasswordTextBoxWindow;
            }
        }
        
        public UILoginWindow1 UILoginWindow1
        {
            get
            {
                if ((this.mUILoginWindow1 == null))
                {
                    this.mUILoginWindow1 = new UILoginWindow1(this);
                }
                return this.mUILoginWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIUsernameTextBoxWindow mUIUsernameTextBoxWindow;
        
        private UIPasswordTextBoxWindow mUIPasswordTextBoxWindow;
        
        private UILoginWindow1 mUILoginWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIUsernameTextBoxWindow : WinWindow
    {
        
        public UIUsernameTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "UsernameTextBox";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameTextBoxEdit
        {
            get
            {
                if ((this.mUIUsernameTextBoxEdit == null))
                {
                    this.mUIUsernameTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameTextBoxEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIUsernameTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPasswordTextBoxWindow : WinWindow
    {
        
        public UIPasswordTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "PasswordTextBox";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPasswordTextBoxEdit
        {
            get
            {
                if ((this.mUIPasswordTextBoxEdit == null))
                {
                    this.mUIPasswordTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordTextBoxEdit.SearchProperties[WinEdit.PropertyNames.Name] = "User name";
                    this.mUIPasswordTextBoxEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIPasswordTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPasswordTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UILoginWindow1 : WinWindow
    {
        
        public UILoginWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "OK";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WinButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISupplierWindow : WinWindow
    {
        
        public UISupplierWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Supplier";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public UIAddWindow UIAddWindow
        {
            get
            {
                if ((this.mUIAddWindow == null))
                {
                    this.mUIAddWindow = new UIAddWindow(this);
                }
                return this.mUIAddWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        
        public UIFindWindow UIFindWindow
        {
            get
            {
                if ((this.mUIFindWindow == null))
                {
                    this.mUIFindWindow = new UIFindWindow(this);
                }
                return this.mUIFindWindow;
            }
        }
        
        public UIDeleteWindow UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        
        public UISupplierTitleBar UISupplierTitleBar
        {
            get
            {
                if ((this.mUISupplierTitleBar == null))
                {
                    this.mUISupplierTitleBar = new UISupplierTitleBar(this);
                }
                return this.mUISupplierTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddWindow mUIAddWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UISaveWindow mUISaveWindow;
        
        private UIFindWindow mUIFindWindow;
        
        private UIDeleteWindow mUIDeleteWindow;
        
        private UISupplierTitleBar mUISupplierTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddWindow : WinWindow
    {
        
        public UIAddWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnAdd";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnAdd";
                    this.mUIAddButton.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnSave";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnSave";
                    this.mUISaveButton.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFindWindow : WinWindow
    {
        
        public UIFindWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnSearch";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinButton UIFindButton
        {
            get
            {
                if ((this.mUIFindButton == null))
                {
                    this.mUIFindButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFindButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnSearch";
                    this.mUIFindButton.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIFindButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFindButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIDeleteWindow : WinWindow
    {
        
        public UIDeleteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnDElete";
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnDElete";
                    this.mUIDeleteButton.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISupplierTitleBar : WinTitleBar
    {
        
        public UISupplierTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Supplier");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Supplier");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIInformationWindow : WinWindow
    {
        
        public UIInformationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Information";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btn2";
            this.WindowTitles.Add("Information");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Information");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFindSupplier6RecordFWindow : WinWindow
    {
        
        public UIFindSupplier6RecordFWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Find Supplier :: (6 Record Found)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Find Supplier :: (6 Record Found)");
            this.WindowTitles.Add("Find Supplier :: (2 Record Found)");
            this.WindowTitles.Add("Find Supplier :: (1 Record Found)");
            #endregion
        }
        
        #region Properties
        public UITxtcariWindow UITxtcariWindow
        {
            get
            {
                if ((this.mUITxtcariWindow == null))
                {
                    this.mUITxtcariWindow = new UITxtcariWindow(this);
                }
                return this.mUITxtcariWindow;
            }
        }
        
        public UIFindSupplier2RecordFClient UIFindSupplier2RecordFClient
        {
            get
            {
                if ((this.mUIFindSupplier2RecordFClient == null))
                {
                    this.mUIFindSupplier2RecordFClient = new UIFindSupplier2RecordFClient(this);
                }
                return this.mUIFindSupplier2RecordFClient;
            }
        }
        #endregion
        
        #region Fields
        private UITxtcariWindow mUITxtcariWindow;
        
        private UIFindSupplier2RecordFClient mUIFindSupplier2RecordFClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITxtcariWindow : WinWindow
    {
        
        public UITxtcariWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtcari";
            this.WindowTitles.Add("Find Supplier :: (6 Record Found)");
            this.WindowTitles.Add("Find Supplier :: (2 Record Found)");
            this.WindowTitles.Add("Find Supplier :: (1 Record Found)");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtcariEdit
        {
            get
            {
                if ((this.mUITxtcariEdit == null))
                {
                    this.mUITxtcariEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtcariEdit.WindowTitles.Add("Find Supplier :: (6 Record Found)");
                    this.mUITxtcariEdit.WindowTitles.Add("Find Supplier :: (2 Record Found)");
                    this.mUITxtcariEdit.WindowTitles.Add("Find Supplier :: (1 Record Found)");
                    #endregion
                }
                return this.mUITxtcariEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtcariEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFindSupplier2RecordFClient : WinClient
    {
        
        public UIFindSupplier2RecordFClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Find Supplier :: (2 Record Found)";
            this.WindowTitles.Add("Find Supplier :: (2 Record Found)");
            #endregion
        }
        
        #region Properties
        public WinWindow UIGridWindow
        {
            get
            {
                if ((this.mUIGridWindow == null))
                {
                    this.mUIGridWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIGridWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DataGridView";
                    this.mUIGridWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIGridWindow.WindowTitles.Add("Find Supplier :: (2 Record Found)");
                    #endregion
                }
                return this.mUIGridWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIGridWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIConfirmWindow : WinWindow
    {
        
        public UIConfirmWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Confirm";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Confirm");
            #endregion
        }
        
        #region Properties
        public UIYESWindow UIYESWindow
        {
            get
            {
                if ((this.mUIYESWindow == null))
                {
                    this.mUIYESWindow = new UIYESWindow(this);
                }
                return this.mUIYESWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYESWindow mUIYESWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIYESWindow : WinWindow
    {
        
        public UIYESWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Btn1";
            this.WindowTitles.Add("Confirm");
            #endregion
        }
        
        #region Properties
        public WinButton UIYESButton
        {
            get
            {
                if ((this.mUIYESButton == null))
                {
                    this.mUIYESButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYESButton.SearchProperties[WinButton.PropertyNames.Name] = "YES";
                    this.mUIYESButton.WindowTitles.Add("Confirm");
                    #endregion
                }
                return this.mUIYESButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYESButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICashierWindow : WinWindow
    {
        
        public UICashierWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Cashier";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public UIAddWindow1 UIAddWindow
        {
            get
            {
                if ((this.mUIAddWindow == null))
                {
                    this.mUIAddWindow = new UIAddWindow1(this);
                }
                return this.mUIAddWindow;
            }
        }
        
        public UIItemWindow6 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow6(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UISaveWindow1 UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow1(this);
                }
                return this.mUISaveWindow;
            }
        }
        
        public UICashierTitleBar UICashierTitleBar
        {
            get
            {
                if ((this.mUICashierTitleBar == null))
                {
                    this.mUICashierTitleBar = new UICashierTitleBar(this);
                }
                return this.mUICashierTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddWindow1 mUIAddWindow;
        
        private UIItemWindow6 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UISaveWindow1 mUISaveWindow;
        
        private UICashierTitleBar mUICashierTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddWindow1 : WinWindow
    {
        
        public UIAddWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnAdd";
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnAdd";
                    this.mUIAddButton.WindowTitles.Add("Cashier");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Cashier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Cashier");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UISaveWindow1 : WinWindow
    {
        
        public UISaveWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnSave";
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnSave";
                    this.mUISaveButton.WindowTitles.Add("Cashier");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICashierTitleBar : WinTitleBar
    {
        
        public UICashierTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Cashier");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Cashier");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFindBarang6102RecordWindow : WinWindow
    {
        
        public UIFindBarang6102RecordWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Find Barang :: (6102 Record Found)";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Find Barang :: (6102 Record Found)");
            this.WindowTitles.Add("Find Barang :: (468 Record Found)");
            this.WindowTitles.Add("Find Barang :: (88 Record Found)");
            this.WindowTitles.Add("Find Barang :: (61 Record Found)");
            this.WindowTitles.Add("Find Barang :: (784 Record Found)");
            this.WindowTitles.Add("Find Barang :: (168 Record Found)");
            this.WindowTitles.Add("Find Barang :: (9 Record Found)");
            this.WindowTitles.Add("Find Barang :: (6 Record Found)");
            this.WindowTitles.Add("Find Barang :: (1 Record Found)");
            this.WindowTitles.Add("Find Barang :: (0 Record Found)");
            this.WindowTitles.Add("Find Barang :: (4 Record Found)");
            #endregion
        }
        
        #region Properties
        public UITxtcariWindow1 UITxtcariWindow
        {
            get
            {
                if ((this.mUITxtcariWindow == null))
                {
                    this.mUITxtcariWindow = new UITxtcariWindow1(this);
                }
                return this.mUITxtcariWindow;
            }
        }
        
        public UIFindBarang784RecordFClient UIFindBarang784RecordFClient
        {
            get
            {
                if ((this.mUIFindBarang784RecordFClient == null))
                {
                    this.mUIFindBarang784RecordFClient = new UIFindBarang784RecordFClient(this);
                }
                return this.mUIFindBarang784RecordFClient;
            }
        }
        #endregion
        
        #region Fields
        private UITxtcariWindow1 mUITxtcariWindow;
        
        private UIFindBarang784RecordFClient mUIFindBarang784RecordFClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITxtcariWindow1 : WinWindow
    {
        
        public UITxtcariWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtcari";
            this.WindowTitles.Add("Find Barang :: (6102 Record Found)");
            this.WindowTitles.Add("Find Barang :: (468 Record Found)");
            this.WindowTitles.Add("Find Barang :: (88 Record Found)");
            this.WindowTitles.Add("Find Barang :: (61 Record Found)");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtcariEdit
        {
            get
            {
                if ((this.mUITxtcariEdit == null))
                {
                    this.mUITxtcariEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtcariEdit.WindowTitles.Add("Find Barang :: (6102 Record Found)");
                    this.mUITxtcariEdit.WindowTitles.Add("Find Barang :: (468 Record Found)");
                    this.mUITxtcariEdit.WindowTitles.Add("Find Barang :: (88 Record Found)");
                    this.mUITxtcariEdit.WindowTitles.Add("Find Barang :: (61 Record Found)");
                    #endregion
                }
                return this.mUITxtcariEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtcariEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIFindBarang784RecordFClient : WinClient
    {
        
        public UIFindBarang784RecordFClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Find Barang :: (784 Record Found)";
            this.WindowTitles.Add("Find Barang :: (784 Record Found)");
            #endregion
        }
        
        #region Properties
        public WinWindow UIGridWindow
        {
            get
            {
                if ((this.mUIGridWindow == null))
                {
                    this.mUIGridWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIGridWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DataGridView";
                    this.mUIGridWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIGridWindow.WindowTitles.Add("Find Barang :: (784 Record Found)");
                    #endregion
                }
                return this.mUIGridWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIGridWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIAddItemWindow : WinWindow
    {
        
        public UIAddItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Item";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public UIItemWindow7 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow7(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow12 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow12(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow21 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow21(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow31 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow31(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow111 UIItemWindow11
        {
            get
            {
                if ((this.mUIItemWindow11 == null))
                {
                    this.mUIItemWindow11 = new UIItemWindow111(this);
                }
                return this.mUIItemWindow11;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow7 mUIItemWindow;
        
        private UIItemWindow12 mUIItemWindow1;
        
        private UIItemWindow21 mUIItemWindow2;
        
        private UIItemWindow31 mUIItemWindow3;
        
        private UIItemWindow111 mUIItemWindow11;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Item");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow12 : WinWindow
    {
        
        public UIItemWindow12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Item");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow21 : WinWindow
    {
        
        public UIItemWindow21(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Item");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow31 : WinWindow
    {
        
        public UIItemWindow31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Item");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow111 : WinWindow
    {
        
        public UIItemWindow111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Item");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Item");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPaymentWindow : WinWindow
    {
        
        public UIPaymentWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Payment";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Payment");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        
        public UIPrintWindow UIPrintWindow
        {
            get
            {
                if ((this.mUIPrintWindow == null))
                {
                    this.mUIPrintWindow = new UIPrintWindow(this);
                }
                return this.mUIPrintWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        
        private UIPrintWindow mUIPrintWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnCancel";
            this.WindowTitles.Add("Payment");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnCancel";
                    this.mUICancelButton.WindowTitles.Add("Payment");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIPrintWindow : WinWindow
    {
        
        public UIPrintWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnSave";
            this.WindowTitles.Add("Payment");
            #endregion
        }
        
        #region Properties
        public WinButton UIPrintButton
        {
            get
            {
                if ((this.mUIPrintButton == null))
                {
                    this.mUIPrintButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPrintButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnSave";
                    this.mUIPrintButton.WindowTitles.Add("Payment");
                    #endregion
                }
                return this.mUIPrintButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPrintButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIRegisterAppForComputWindow : WinWindow
    {
        
        public UIRegisterAppForComputWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Register App For Computer Name : LUISGINAN-PC";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public UIItemWindow8 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow8(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow13 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow13(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow22 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow22(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UITestConnectionWindow UITestConnectionWindow
        {
            get
            {
                if ((this.mUITestConnectionWindow == null))
                {
                    this.mUITestConnectionWindow = new UITestConnectionWindow(this);
                }
                return this.mUITestConnectionWindow;
            }
        }
        
        public UIItemWindow32 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow32(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIRegisterWindow UIRegisterWindow
        {
            get
            {
                if ((this.mUIRegisterWindow == null))
                {
                    this.mUIRegisterWindow = new UIRegisterWindow(this);
                }
                return this.mUIRegisterWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow8 mUIItemWindow;
        
        private UIItemWindow13 mUIItemWindow1;
        
        private UIItemWindow22 mUIItemWindow2;
        
        private UITestConnectionWindow mUITestConnectionWindow;
        
        private UIItemWindow32 mUIItemWindow3;
        
        private UIRegisterWindow mUIRegisterWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow8 : WinWindow
    {
        
        public UIItemWindow8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow13 : WinWindow
    {
        
        public UIItemWindow13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow22 : WinWindow
    {
        
        public UIItemWindow22(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UITestConnectionWindow : WinWindow
    {
        
        public UITestConnectionWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnTestConnection";
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinButton UITestConnectionButton
        {
            get
            {
                if ((this.mUITestConnectionButton == null))
                {
                    this.mUITestConnectionButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITestConnectionButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnTestConnection";
                    this.mUITestConnectionButton.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUITestConnectionButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITestConnectionButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow32 : WinWindow
    {
        
        public UIItemWindow32(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIRegisterWindow : WinWindow
    {
        
        public UIRegisterWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "BtnRegister";
            this.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
            #endregion
        }
        
        #region Properties
        public WinButton UIRegisterButton
        {
            get
            {
                if ((this.mUIRegisterButton == null))
                {
                    this.mUIRegisterButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIRegisterButton.SearchProperties[WinButton.PropertyNames.Name] = "BtnRegister";
                    this.mUIRegisterButton.WindowTitles.Add("Register App For Computer Name : LUISGINAN-PC");
                    #endregion
                }
                return this.mUIRegisterButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIRegisterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow9 : WinWindow
    {
        
        public UIItemWindow9()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "DropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinMenu UIDropDownMenu
        {
            get
            {
                if ((this.mUIDropDownMenu == null))
                {
                    this.mUIDropDownMenu = new WinMenu(this);
                    #region Search Criteria
                    this.mUIDropDownMenu.SearchProperties[WinMenu.PropertyNames.Name] = "DropDown";
                    #endregion
                }
                return this.mUIDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private WinMenu mUIDropDownMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIItemWindow14 : WinWindow
    {
        
        public UIItemWindow14()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "AplicationDropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinMenu UIAplicationDropDownMenu
        {
            get
            {
                if ((this.mUIAplicationDropDownMenu == null))
                {
                    this.mUIAplicationDropDownMenu = new WinMenu(this);
                    #region Search Criteria
                    this.mUIAplicationDropDownMenu.SearchProperties[WinMenu.PropertyNames.Name] = "AplicationDropDown";
                    #endregion
                }
                return this.mUIAplicationDropDownMenu;
            }
        }
        #endregion
        
        #region Fields
        private WinMenu mUIAplicationDropDownMenu;
        #endregion
    }
}
